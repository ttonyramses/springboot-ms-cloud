plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.appsdeveloperblog.photoapp.api.users'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
		implementation("org.springframework.boot:spring-boot-starter-data-jpa")
		implementation("org.springframework.boot:spring-boot-starter-security")
		implementation("com.h2database:h2")
		implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml")
		implementation("io.jsonwebtoken:jjwt-api:0.12.6")
		implementation("io.jsonwebtoken:jjwt-impl:0.12.6")
		runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.12.6")
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


		compileOnly 'org.projectlombok:lombok:1.18.38' // Version rÃ©cente
		annotationProcessor 'org.projectlombok:lombok:1.18.38'


		// ðŸ”„ MAPSTRUCT
	implementation 'org.mapstruct:mapstruct:1.6.3'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

		// Si tu veux que Spring injecte les mappers avec @Autowired
		//annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'


	}
	set('springCloudVersion', "2025.0.0-RC1")
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
